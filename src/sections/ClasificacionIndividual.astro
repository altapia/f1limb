---
import type { Clasificacion } from "@/lib/model";
import Exclamation from "@/icons/Exclamation.astro";
import { turso } from "../turso";
import type { ResultSet } from "@libsql/client";

const { gpId } = Astro.props;

const { rows: rowClasificacion }  = await selectClasificacion()

function selectClasificacion():Promise<ResultSet>{
  if(gpId){
    return turso.execute({sql: 
      'SELECT c.id, c.userId, c.gpId, c.ganancia, c.puntos, u.nombre as userNombre, t.nombre as teamNombre, t.id as teamId '+
      'FROM clasificacion c '+
      'LEFT JOIN user u ON u.id = c.userId '+
      'LEFT JOIN team t ON t.id = u.teamId '+
      'WHERE c.gpId = ? ORDER BY c.puntos desc', args: [gpId]})
  }
  return turso.execute( 
      'SELECT c.id, c.userId, SUM(c.ganancia) as ganancia, SUM(c.puntos) as puntos, u.nombre as userNombre, t.nombre as teamNombre, t.id as teamId '+
      'FROM clasificacion c '+
      'LEFT JOIN user u ON u.id = c.userId ' +
      'LEFT JOIN team t ON t.id = u.teamId ' +
      'GROUP BY c.userId ' +
      'ORDER BY SUM(c.puntos) desc,  SUM(c.ganancia) desc')
}

let listClasificacion: Clasificacion[] = []
listClasificacion = rowClasificacion.map((c: any): Clasificacion => {
  return {
    id: c.id,
    user: {
      id: c.userId,
      nombre: c.userNombre,
      team: {
        id: c.teamId,
        nombre: c.teamNombre
      }
    },
    gp: {
      id: c.gpId
    },
    ganancia: c.ganancia,
    puntos: c.puntos
  }
})

---

<article class="flex flex-col justify-center">
  <h2 class="text-3xl font-bold text-center mb-5">Clasificación individual</h2>

  {
    listClasificacion && (
      <ul class="max-w-[40rem] mx-auto">
        {listClasificacion.map((a, i) => (
          <li class="grid grid-cols-[.3fr_1fr_.5fr_1fr] gap-4 hover:bg-gray-300">
            <div class="text-right">{i + 1}</div>
            <div>
              {a.user?.nombre}{" "}
              <small class={"text-xs bg-gray-200 p-1 rounded-lg "}>
                {a.user?.team?.nombre}
              </small>
            </div>
            <div class="text-right">
              {Math.round(a.ganancia * 100) / 100}€
            </div>
            <div>
              {a.puntos} pts.
              {gpId && a.ganancia == -3 && (
                <span class="bg-gray-500 text-white rounded p-1 text-xs">
                  DNF
                </span>
              )}
            </div>
          </li>
        ))}
      </ul>
    )
  }

  {
    !listClasificacion && (
      <div class="flex bg-gray-300 p-5">
        <i>
          <Exclamation class="h-5 w-5 text-black mr-1" />
        </i>{" "}
        Clasificación no disponible
      </div>
    )
  }
</article>
