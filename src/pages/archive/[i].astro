---
import { GpService } from "@/lib/gpService"
import type { GpVO, TemporadaVO } from "@/lib/model"
import { getIndexGPActivo } from "@/lib/utils"

import IndiceGanancia from "@/components/IndiceGanancia.astro"
import Info from "@/components/Info.astro"
import Layout from "@/layouts/Layout.astro"
import { TemporadaService } from "@/lib/temporadaService"
import ClasificacionEquipos from "@/sections/ClasificacionEquipos.astro"
import ClasificacionIndividual from "@/sections/ClasificacionIndividual.astro"
import ClasificacionTabla from "@/sections/ClasificacionTabla.astro"
import Hero from "@/sections/Hero.astro"
import Nav from "@/sections/Nav.astro"

// Se preparan las rutas estÃ¡ticas
export async function getStaticPaths() {
	const temporadaService = new TemporadaService()
	const listArchiveTemps = await temporadaService.getArchiveTemps()
	return listArchiveTemps.map((temporada: TemporadaVO) => ({
		params: { i: temporada.id?.toString() },
	}))
}

const { i } = Astro.params
const temporadaId = parseInt(i || "0")

const temporadaService = new TemporadaService()
const temporada = await temporadaService.getById(temporadaId)

const current = await temporadaService.getCurrentTemporada()
const past = current.id !== temporadaId

if (temporada === null) {
	console.error("temporada no encontrada")
	return
}

let gpService = new GpService()
const listGP = await gpService.getAllGpByTemp(temporadaId)

let indexProximo = getIndexGPActivo(listGP)
---

<Layout title="F1 Limb">
	<Nav idTemporada={temporada.id} nombreTemporada={temporada.nombre} past={past} />
	<div class="mx-auto max-w-6xl px-2 pt-10 lg:px-10">
		<Hero temporadaId={temporadaId} />
	</div>
	<main class="mx-auto max-w-6xl px-2 pt-10 lg:px-10">
		<section class="mx-auto mb-10 w-10/12">
			<h2 class="text-xl font-bold">Dinero total</h2>
			<IndiceGanancia idTemporada={temporada.id} />
		</section>

		<section class="my-10 flex justify-center">
			<span id="gp-selected" data-gpselected={indexProximo} class="invisible"></span>
			<!-- Swiper -->
			<div class="swiper mySwiper md:!max-w-[30rem]">
				<div class="swiper-wrapper">
					{listGP.map((data: GpVO) => <Info gp={data} past={past} />)}
				</div>
				<div class="swiper-button-next !text-teal-500 hover:scale-125"></div>
				<div class="swiper-button-prev !text-teal-500 hover:scale-125"></div>
			</div>
		</section>

		<article class="mb-10 flex flex-col justify-center gap-12 md:flex-row md:items-start">
			<ClasificacionIndividual idTemporada={temporada.id} />
			<ClasificacionEquipos idTemporada={temporada.id} />
		</article>

		<article class="mb-10 flex flex-col justify-center gap-12 md:flex-row md:items-start">
			<ClasificacionTabla idTemporada={temporada.id} />
		</article>
	</main>

	<script>
		import Swiper from "swiper"
		import { Navigation } from "swiper/modules"
		import "swiper/css/bundle"

		const $gpSelected = document.getElementById("gp-selected")

		let gpSelected = 0
		if ($gpSelected && $gpSelected.dataset.gpselected) {
			gpSelected = Number($gpSelected.dataset.gpselected)
		}
		new Swiper(".mySwiper", {
			modules: [Navigation],
			navigation: {
				nextEl: ".swiper-button-next",
				prevEl: ".swiper-button-prev",
			},
			initialSlide: gpSelected,
		})
	</script>
</Layout>

<style>
	.swiper {
		max-width: 100%;
	}
</style>
