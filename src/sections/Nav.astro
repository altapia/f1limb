---
import Sort from "@/icons/Sort.astro";
import DropdownGP from "@/components/DropdownGP.astro";
import { turso } from "../turso";

const { rows: gpRows } = await turso.execute("SELECT * FROM gp");

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
---

<nav class="flex px-4 py-4 justify-between items-center bg-white">
  <a href="/" class="flex items-center space-x-3">
    <img src="/img/f1limb_logo.avif" class="h-10" />
    <span class="self-center text-2xl font-semibold whitespace-nowrap"
      >F1 Limb</span
    >
  </a>
  <div class="lg:hidden">
    <button class="navbar-burger flex items-center text-teal-600 p-3">
      <svg
        class="block h-4 w-4 fill-current"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>Mobile menu</title>
        <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
      </svg>
    </button>
  </div>
  <ul class="hidden lg:flex">
    <li>
      <button id="dropdown-button" class="flex p-4">
        GPs
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5 ml-2 -mr-1"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            fill-rule="evenodd"
            d="M6.293 9.293a1 1 0 011.414 0L10 11.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
            clip-rule="evenodd"></path>
        </svg>
      </button>
      <div
        id="dropdown-menu"
        class="absolute rounded-md shadow-lg bg-white invisible"
      >
        <div
          class="py-2 p-2"
          role="menu"
          aria-orientation="vertical"
          aria-labelledby="dropdown-button"
        >
          {gpRows.map((data, i) => <DropdownGP info={data} index={i} />)}
        </div>
      </div>
    </li>

    <li>
      <a
        href="/clasificacion"
        class="flex p-4 text-sm font-semibold"
        class:list={[
          { " text-teal-800 bg-teal-100 ": currentPath === "clasificacion" },
          {
            "text-teal-800 bg-teal-100 hover:bg-teal-400":
              currentPath !== "clasificacion",
          },
        ]}
      >
        <i><Sort class="h-5 w-5 mr-1" /></i> Clasificación General
      </a>
    </li>
  </ul>
</nav>

<div class="navbar-menu relative z-50 hidden">
  <div class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-25"></div>
  <nav
    class="fixed top-0 left-0 bottom-0 flex flex-col w-5/6 max-w-sm py-6 px-6 bg-white border-r overflow-y-auto"
  >
    <div class="flex items-center mb-8">
      <a href="/" class="mr-auto flex items-center space-x-3">
        <img src="/img/f1limb_logo.avif" class="h-10" />
        <span class="self-center text-2xl font-semibold whitespace-nowrap"
          >F1 Limb</span
        >
      </a>
      <button class="navbar-close">
        <svg
          class="h-6 w-6 text-gray-400 cursor-pointer hover:text-gray-500"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <div>
      <ul>
        <li class="mb-2">
          <a
            href="/clasificacion"
            class="flex px-4 py-2 text-sm font-semibold rounded"
            class:list={[
              {
                " text-black bg-teal-300 hover:bg-teal-600 hover:text-white":
                  currentPath === "clasificacion",
              },
              {
                " text-gray-500 hover:bg-teal-200":
                  currentPath !== "clasificacion",
              },
            ]}
          >
            <i><Sort class="h-5 w-5 mr-1" /></i> Clasificación General
          </a>
        </li>
        <li class="mb-1">
          <button
            id="dropdown-button-mobile"
            class="inline-flex w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white"
          >
            GPs
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="w-5 h-5 ml-2 -mr-1"
              viewBox="0 0 20 20"
              fill="currentColor"
              aria-hidden="true"
            >
              <path
                fill-rule="evenodd"
                d="M6.293 9.293a1 1 0 011.414 0L10 11.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </button>
          <div
            id="dropdown-menu-mobile"
            class="invisible absolute mt-2 w-11/12 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5"
          >
            <div
              class="py-2 p-2"
              role="menu"
              aria-orientation="vertical"
              aria-labelledby="dropdown-button-mobile"
            >
              {gpRows.map((data, i) => <DropdownGP info={data} index={i} />)}
            </div>
          </div>
        </li>
      </ul>
    </div>
  </nav>
</div>

<script>
  // Burger menus
  document.addEventListener("DOMContentLoaded", function () {
    // open
    const burger = document.querySelectorAll(".navbar-burger");
    const menu = document.querySelectorAll(".navbar-menu");

    if (burger.length && menu.length) {
      for (var i = 0; i < burger.length; i++) {
        burger[i].addEventListener("click", function () {
          for (var j = 0; j < menu.length; j++) {
            menu[j].classList.toggle("hidden");
          }
        });
      }
    }

    // close
    const close = document.querySelectorAll(".navbar-close");
    const backdrop = document.querySelectorAll(".navbar-backdrop");

    if (close.length) {
      for (var i = 0; i < close.length; i++) {
        close[i].addEventListener("click", function () {
          for (var j = 0; j < menu.length; j++) {
            menu[j].classList.toggle("hidden");
          }
        });
      }
    }

    if (backdrop.length) {
      for (var i = 0; i < backdrop.length; i++) {
        backdrop[i].addEventListener("click", function () {
          for (var j = 0; j < menu.length; j++) {
            menu[j].classList.toggle("hidden");
          }
        });
      }
    }

    /**
     * Dropdown de menu GPs
     */
    const dropdownButton = document.getElementById("dropdown-button");
    const dropdownMenu = document.getElementById("dropdown-menu");
    const dropdownButtonMobile = document.getElementById(
      "dropdown-button-mobile",
    );
    const dropdownMenuMobile = document.getElementById("dropdown-menu-mobile");
    let isDropdownOpen = false;
    let isDropdownOpenMobile = false;

    // Toggle the dropdown when the button is clicked
    if (dropdownButton) {
      dropdownButton.addEventListener("click", toggleDropdown);
    }

    if (dropdownButtonMobile) {
      dropdownButtonMobile.addEventListener("click", toggleDropdownMobile);
    }

    // Function to toggle the dropdown
    function toggleDropdown() {
      console.log("toggleDropdown");
      if (!dropdownMenu) return;

      console.log("toggleDropdown - isDropdownOpen", isDropdownOpen);
      isDropdownOpen = !isDropdownOpen;
      if (isDropdownOpen) {
        console.log("toggleDropdown- lo muestro");
        dropdownMenu.classList.remove("invisible");
      } else {
        console.log("toggleDropdown- lo oculto");
        dropdownMenu.classList.add("invisible");
      }
    }
    function toggleDropdownMobile() {
      if (!dropdownMenuMobile) return;
      isDropdownOpenMobile = !isDropdownOpenMobile;
      if (isDropdownOpenMobile) {
        dropdownMenuMobile.classList.remove("invisible");
      } else {
        dropdownMenuMobile.classList.add("invisible");
      }
    }
  });
</script>
