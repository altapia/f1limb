---
import CeldaTablaClasificacion from "@/components/CeldaTablaClasificacion.astro"
import { ClasificacionService } from "@/lib/clasificacionService"
import { GpService } from "@/lib/gpService"

const { idTemporada } = Astro.props

let gpService = new GpService()
let clasificacionService = new ClasificacionService()

const listGP = await gpService.getAllGp(idTemporada)
const tabla = await clasificacionService.getTablaClasificacionDinamic(idTemporada)

/**
 * Devuelve un array con tantas posiciones vacías como GPs sin clasificación haya, para rellenar la tabla
 * @param u Datos de un usaurio
 */
const getEmptyGps = (u: any) => {
	let gps = Array(listGP.length - u.gps.length)
	for (let i = 0; i < gps.length; i++) {
		gps[i] = null
	}
	return gps
}
---

<setion class="mx-auto mb-5 w-full overflow-x-auto p-2">
	<h2 class="mb-5 text-center text-3xl font-bold">Tabla de clasificación</h2>

	<table class="mx-auto text-center">
		<thead>
			<tr>
				<th class="px-1">Usuario</th>
				{
					listGP.map((gp) => (
						<th class="min-w-5">
							<img class="h-3" title={"" + gp.nombre} src={"/img/" + gp.flag} />
						</th>
					))
				}
				<th class="px-1">Total</th>
			</tr>
		</thead>
		<tbody>
			{
				tabla.map((u) => (
					<tr class="hover:bg-slate-200">
						<td class="font-semibold">{u.nombre}</td>
						{u.gps.map(({ puntos, puesto }: any) => (
							<CeldaTablaClasificacion puntos={puntos} pos={puesto} />
						))}
						{getEmptyGps(u).map(() => (
							<td />
						))}
						<td class="text-right font-semibold"> {u.total}</td>
					</tr>
				))
			}
		</tbody>
	</table>
</setion>
