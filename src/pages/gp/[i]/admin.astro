---
import HeroGP from "@/components/HeroGP.astro"
import UpdateEstado from "@/components/UpdateEstado.svelte"
import Back from "@/icons/Back.astro"
import Layout from "@/layouts/Layout.astro"
import { ApuestaService } from "@/lib/apuestaService"
import { GpService } from "@/lib/gpService"
import { UserService } from "@/lib/userService"
import Nav from "@/sections/Nav.astro"

import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)

let userService = new UserService()
const isAdmin = await userService.isAdmin(session)

// Si no admin redirect
if (!isAdmin) return Astro.redirect("/")

const { i } = Astro.params
const gpId = parseInt(i || "0")

let gpService = new GpService()
const gp = await gpService.getGp(gpId)

let apuestaService = new ApuestaService()
const listApuestas = await apuestaService.getApuestasByGPWithUser(gpId)

const usuarios = await userService.getUsersTeam()

usuarios.forEach((u) => {
	u.apuestas = []
	if (listApuestas !== undefined) {
		let apuestasUsuario = listApuestas.filter((a) => a.user?.id === u.id)
		u.apuestas = apuestasUsuario
	}
})
---

<Layout title="F1 Limb">
	<Nav />
	<main class="mx-auto max-w-6xl px-2 pt-16 md:pt-20 lg:px-10">
		<h2 class="mb-5 text-center text-xl font-bold">AdministraciÃ³n</h2>
		<HeroGP gp={gp} />
		<section class="mx-auto my-10 flex max-w-6xl justify-center gap-2">
			<a
				href={"/gp/" + gpId}
				title={"Apuestas de " + gp.nombre}
				class="flex bg-teal-800 p-3 text-white hover:bg-teal-500 hover:text-black"
			>
				<i><Back class="mr-1 h-5 w-5 text-white" /></i>
				Volver
			</a>
			<a
				href={"/gp/" + gpId + "/admin/new"}
				title={"Apuestas de " + gp.nombre}
				class="flex bg-teal-800 p-3 text-white hover:bg-teal-500 hover:text-black"
			>
				Nueva
			</a>
		</section>
		<ul class="">
			<UpdateEstado listApuestasUser={usuarios} client:load />
		</ul>
	</main>
</Layout>
