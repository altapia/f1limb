---
import HeroGP from "@/components/HeroGP.astro"
import UpdateEstado from "@/components/UpdateEstado.svelte"
import Check from "@/icons/Check.astro"
import Clock from "@/icons/Clock.astro"
import Close from "@/icons/Close.astro"
import Layout from "@/layouts/Layout.astro"
import type { Apuesta } from "@/lib/model"
import Nav from "@/sections/Nav.astro"
import { turso } from "@/turso"

import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)
const emailUser = session?.user?.email
if (!emailUser) return

const { rows: rowsUser } = await turso.execute({
	sql: "SELECT * FROM user WHERE email = ? and admin = 1",
	args: [emailUser],
})

if (!rowsUser[0]) return Astro.redirect("/")

const { i } = Astro.params
const gpId = i ?? 0
const { rows } = await turso.execute({ sql: "SELECT * FROM gp WHERE id = ?", args: [gpId] })
const infoGP = rows[0]

const { rows: rowsAp } = await turso.execute({
	sql: "SELECT a.id, a.descripcion, a.importe, a.cuota, a.ganancia, a.estado, a.userId, u.nombre as userNombre FROM apuesta a INNER JOIN user u on u.id = a.userId WHERE a.gpId = ? order by a.userId",
	args: [gpId],
})

let listApuestas: Apuesta[] = []
listApuestas = rowsAp.map((a: any): Apuesta => {
	return {
		id: a.id,
		user: {
			id: a.userId,
			nombre: a.userNombre,
		},
		descripcion: a.descripcion,
		importe: a.importe,
		cuota: a.cuota,
		estado: a.estado,
		ganancia: a.ganancia,
	}
})
---

<Layout title="F1 Limb">
	<Nav info={infoGP} />
	<main class="mx-auto max-w-6xl px-2 pt-16 md:pt-20 lg:px-10">
		<h2 class="mb-5 text-center text-xl font-bold">Administración</h2>
		<HeroGP info={infoGP} />
		<ul class="">
			<UpdateEstado listApuestas={listApuestas} client:load />
			<!-- {
				rowsAp.map((a, index) => (
					<li
						class="my-3 flex items-center justify-between"
						class:list={[{ "bg-gray-200": index % 2 == 0 }]}
					>
						<div class="flex items-center">
							<span class="mr-1 font-semibold">{a.nombre}</span>
							<span>
								{a.estado == 1 && <Clock class="mr-1 h-5 w-5 text-gray-500 " />}
								{a.estado == 2 && <Check class="mr-1 h-5 w-5 text-green-500 " />}
								{a.estado == 3 && <Close class="mr-1 h-5 w-5 text-red-500 " />}
							</span>
							<span set:html={a.descripcion} />
							<span class="mx-1 font-semibold">{a.importe}€</span>
							<span class="font-semibold">@{a.cuota}</span>
						</div>
						<span
							class:list={[
								"ml-1 flex items-center rounded-lg px-1 text-sm ",
								{ "bg-gray-300": a.estado === 1 },
								{ "bg-green-300": a.estado === 2 },
								{ "bg-red-300": a.estado === 3 },
							]}
						/>

						<UpdateEstado id={a.id} estado={a.estado} />
					</li>
				))
			} -->
		</ul>
	</main>
</Layout>
