---
import ApuestasUsuario from "@/components/ApuestasUsuario.astro"
import ApuestasUsuarioArchive from "@/components/ApuestasUsuarioArchive.astro"
import Exclamation from "@/icons/Exclamation.astro"
import { ApuestaService } from "@/lib/apuestaService"
import type { ApuestaVO, ParticipanteVO } from "@/lib/model"
import { ParticipanteService } from "@/lib/participanteService"

const { gpId, idTemporada, past } = Astro.props

let apuestaService = new ApuestaService()
const visible = await apuestaService.hanApostadoTodosTodo(idTemporada, gpId, true)
let listApuestas: ApuestaVO[] = []
let participantes: ParticipanteVO[] = []

if (visible) {
	listApuestas = await apuestaService.getApuestasByGP(gpId)
	const participanteService = new ParticipanteService()
	participantes = await participanteService.getAll(idTemporada)

	participantes.forEach((p) => {
		p.apuestas = []
		if (listApuestas !== undefined) {
			let apuestasUsuario = listApuestas.filter((a) => a.participante?.id === p.id)
			apuestasUsuario.map((a) => {
				a.descripcion = a.descripcion?.replace(/(?:\r\n|\r|\n)/g, "<br>")
			})
			p.apuestas = apuestasUsuario
		}
	})
}
---

{
	visible && listApuestas && listApuestas.length > 0 ? (
		<>
			<h2 class="text-center text-3xl font-bold">Apuestas</h2>
			<setion class="mb-5">
				<ul>
					{participantes.map(
						(u) =>
							u.apuestas &&
							u.apuestas.length > 0 && (
								<li>
									{past ? (
										<ApuestasUsuarioArchive participante={u} />
									) : (
										<ApuestasUsuario participante={u} />
									)}
								</li>
							)
					)}
				</ul>
			</setion>
		</>
	) : (
		<div class="flex bg-gray-300 p-5">
			<i>
				<Exclamation class="mr-1 h-5 w-5 text-black" />
			</i>{" "}
			No hay apuestas o todav√≠a no son visibles
		</div>
	)
}
