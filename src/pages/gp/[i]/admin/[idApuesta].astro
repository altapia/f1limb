---
import HeroGP from "@/components/HeroGP.astro"
import NewApuesta from "@/components/NewApuesta.svelte"
import UpdateApuesta from "@/components/UpdateApuesta.svelte"

import Back from "@/icons/Back.astro"
import Layout from "@/layouts/Layout.astro"
import { ApuestaService } from "@/lib/apuestaService"
import { GpService } from "@/lib/gpService"
import { ParticipanteService } from "@/lib/participanteService"
import { UserService } from "@/lib/userService"
import Nav from "@/sections/Nav.astro"

import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)

let userService = new UserService()
const isAdmin = await userService.isAdmin(session)

// Si no admin redirect
if (!isAdmin) return Astro.redirect("/")

const { i, idApuesta } = Astro.params
const id = idApuesta || 0

const gpId = parseInt(i || "0")

let gpService = new GpService()
const gp = await gpService.getGp(gpId)

const idTemporada = gp.temporada?.id

let apuesta
let listParticipantes
if (id !== "new") {
	let apuestaService = new ApuestaService()
	apuesta = await apuestaService.getApuestasById(parseInt(id || "0"))
} else {
	let participanteService = new ParticipanteService()
	listParticipantes = await participanteService.getAll(idTemporada)
}
---

<Layout title="F1 Limb">
	<Nav idTemporada={idTemporada} nombreTemporada={gp.temporada?.nombre} />
	<main class="mx-auto max-w-6xl px-2 pt-16 md:pt-20 lg:px-10">
		<h2 class="mb-5 text-center text-xl font-bold">Administraci√≥n Apuesta</h2>
		<HeroGP gp={gp} />
		<section class="mx-auto my-10 flex max-w-6xl justify-center">
			<a
				href={"/gp/" + gpId + "/admin"}
				title={"Apuestas de " + gp.nombre}
				class="flex bg-teal-800 p-3 text-white hover:bg-teal-500 hover:text-black"
			>
				<i><Back class="mr-1 h-5 w-5 text-white" /></i>
				Volver
			</a>
		</section>

		{
			apuesta ? (
				<UpdateApuesta apuesta={apuesta} client:load />
			) : (
				<NewApuesta gpId={gpId} listParticipantes={listParticipantes} client:load />
			)
		}
	</main>
</Layout>
