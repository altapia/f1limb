---
import HeroGP from "@/components/HeroGP.astro"
import NewApuesta from "@/components/NewApuesta.svelte"
import UpdateApuesta from "@/components/UpdateApuesta.svelte"

import Back from "@/icons/Back.astro"
import Layout from "@/layouts/Layout.astro"
import type { Apuesta } from "@/lib/model"
import Nav from "@/sections/Nav.astro"
import { turso } from "@/turso"

import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)
const emailUser = session?.user?.email ?? null

const { rows: rowsUser } = await turso.execute({
	sql: "SELECT * FROM user WHERE email = ? and admin = 1",
	args: [emailUser],
})

if (!rowsUser[0]) return Astro.redirect("/")

const { i, idApuesta } = Astro.params
const gpId = i ?? 0
const id = idApuesta ?? 0

const { rows } = await turso.execute({ sql: "SELECT * FROM gp WHERE id = ?", args: [gpId] })
const infoGP = rows[0]
let apuesta
let listUsers
if (id !== "new") {
	const { rows: rowAp } = await turso.execute({
		sql: "SELECT a.id, a.descripcion, a.importe, a.cuota, a.estado, a.ganancia, a.gpId, a.userId, u.nombre as userNombre FROM apuesta a INNER JOIN user u on u.id = a.userId WHERE a.id = ?",
		args: [id],
	})
	if (!rowAp[0]) return
	let transformToApuesta = (a: any): Apuesta => {
		return {
			id: a.id,
			user: {
				id: a.userId,
				nombre: a.userNombre,
			},
			descripcion: a.descripcion,
			importe: a.importe,
			cuota: a.cuota,
			estado: a.estado,
			ganancia: a.ganancia,
			gp: {
				id: a.gpId,
			},
		}
	}
	apuesta = transformToApuesta(rowAp[0])
} else {
	const { rows: rowsUsers } = await turso.execute("SELECT u.id, u.nombre FROM user u")
	listUsers = rowsUsers
}
---

<Layout title="F1 Limb">
	<Nav info={infoGP} />
	<main class="mx-auto max-w-6xl px-2 pt-16 md:pt-20 lg:px-10">
		<h2 class="mb-5 text-center text-xl font-bold">Administraci√≥n Apuesta</h2>
		<HeroGP info={infoGP} />
		<section class="mx-auto my-10 flex max-w-6xl justify-center">
			<a
				href={"/gp/" + gpId + "/admin"}
				title={"Apuestas de " + infoGP.nombre}
				class="flex bg-teal-800 p-3 text-white hover:bg-teal-500 hover:text-black"
			>
				<i><Back class="mr-1 h-5 w-5 text-white" /></i>
				Volver
			</a>
		</section>

		{
			apuesta ? (
				<UpdateApuesta apuesta={apuesta} client:load />
			) : (
				<NewApuesta gpId={gpId} listUsers={listUsers} client:load />
			)
		}
	</main>
</Layout>
